[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[log]
  date = relative
[format]
  pretty = format:%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s
[alias]
  # logs
  l = log
  last = log -1 HEAD
  adog = log --all --decorate --oneline --graph
  rl = reflog --format='%C(auto)%h %<|(20)%gd %C(blue)%cr%C(reset) %gs (%s)'
  h = log -p 
  # switch
  sw = switch
  swc = switch -c
  # branch
  bd = branch -D
  nuke = !sh -c 'git branch -D $1 && git push origin :$1' -
  # rebase
  r = rebase
  ri = rebase -i
  ra = rebase --abort
  rr = rebase --continue
  # commit
  cc = commit
  ca = commit --amend
  ce = commit --amend --no-edit
  # pull
  ll = pull
  # push
  pu = push
  pf = push --force-with-lease origin head
  # diffs
  di = diff
  dis = diff --staged
  din = diff --name-only 
  diu = diff @{upstream} @
  diun = diff @{upstream} @ --name-only
  oldest-ancestor = !zsh -c 'diff --old-line-format= --new-line-format= <(git rev-list --first-parent \"${1:-$1}\") <(git rev-list --first-parent \"${2:-HEAD}\") | head -1' -
  pr ="!f() { git diff origin/$1...head; }; f"
  prs ="!f() { git diff --shortstat origin/$1...head; }; f"
  po ="!f() { git diff $(git oldest-ancestor $1)...head; }; f"
  # cherry picks
  cp = cherry-pick
  cpa = cherry-pick --abort
  cpc = cherry-pick --continue
  # bisect
  bss = bisect start
  bsb = bisect bad
  bsg = bisect good
  bsr = bisect reset
  # misc
  aa = add .
  st = status -sb
  stl = stash list
  stu = stash -u
  std = stash drop
  stp = stash pop
  ru = remote update
  fe = fetch
  ma = merge --abort
  re = reset --hard @{u}
  res = restore
  cl = clean -f . 
  rh = reset --hard 
  no ="!f() { git rev-list --count HEAD ^$1; };f"
  deltag = !sh -c 'git tag -d $1 && git push origin :refs/tags/$1' -
  # https://stackoverflow.com/questions/6900328/git-command-to-show-all-lightweight-tags-creation-dates
  # https://stackoverflow.com/questions/6269927/how-can-i-list-all-tags-in-my-git-repository-by-the-date-they-were-created
  ts = log --tags --simplify-by-decoration --pretty='format:%ai %d'
  # https://stackoverflow.com/questions/1030169/pull-latest-changes-for-all-git-submodules
  sub = submodule update --recursive --remote
[core]
  editor = nvim
  excludesFile = /Users/robbienohra/.gitignore
[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
[user]
  name = Robbie Nohra
  signingkey = robbie@robbienohra.com
  email = robbie.nohra@clearbanc.com
[init]
  defaultBranch = main
[pager]
  diff = delta
  log = delta
  reflog = delta
  show = delta
[interactive]
  diffFilter = delta --color-only --features=interactive
[init]
  defaultBranch = main
[pager]
  branch = true
[merge]
  tool = fugitive
  conflictstyle = merge
[mergetool "fugitive"]
  cmd = vim -f -c "Gvdiffsplit!"
[diff]
  colorMoved = default
[mergetool]
  prompt = false
[credential]
  helper = store
[pull]
  rebase = true
[delta]
  navigate = true  # use n and N to move between diff sections
  side-by-side = true
[branch]
  autosetupmerge = true
[push]
  default = upstream
  autoSetupRemote = true
[commit]
  verbose = true
